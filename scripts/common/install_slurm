#!/bin/bash

#export MUNGEUSER=981
#sudo groupadd -g $MUNGEUSER munge
#sudo useradd  -m -c "MUNGE Uid 'N' Gid Emporium" -d /var/lib/munge -u $MUNGEUSER -g munge  -s /sbin/nologin munge
export SLURMUSER=982
sudo groupadd -g $SLURMUSER slurm &> $CLIC_ROOT/clic.log
sudo useradd  -m -c "Slurm workload manager" -d /var/lib/slurm -u $SLURMUSER -g slurm  -s /bin/bash slurm &> $CLIC_ROOT/clic.log

#echo "Configuring munge"
#sudo dd if=/dev/urandom bs=1 count=1024 | sudo tee /etc/munge/munge.key > /dev/null
#sudo chown munge:munge /etc/munge/munge.key
#sudo chmod 400 /etc/munge/munge.key

#sudo chown -R munge:munge /etc/munge/ /var/log/munge/
#sudo chmod 0700 /etc/munge/ /var/log/munge/

#sudo systemctl enable munge
#sudo systemctl start munge

command -v slurmctld >/dev/null 2>&1 || {
	echo "Installing slurm"
	VER=`curl -s https://www.schedmd.com/downloads.php | grep -oP 'latest/slurm-.*?.tar.bz2' | head -n 1 | grep -o '\([0-9][0-9]*.\)*' | rev | cut -c 2- | rev`
	cd /tmp
	curl -O https://www.schedmd.com/downloads/latest/slurm-$VER.tar.bz2
	tar xjf slurm-$VER.tar.bz2
	cd slurm-$VER
	echo "Compiling slurm (takes at least 5 minutes)"
	./configure --prefix=/usr --sysconfdir=/etc/slurm &> $CLIC_ROOT/clic.log
	make &> $CLIC_ROOT/clic.log
	sudo make install &> $CLIC_ROOT/clic.log
}

echo "[Unit]
Description=Slurm controller daemon
After=network.target munge.service
ConditionPathExists=/etc/slurm/slurm.conf

[Service]
Type=forking
EnvironmentFile=-/etc/sysconfig/slurmctld
ExecStart=/usr/sbin/slurmctld \$SLURMCTLD_OPTIONS
ExecReload=/bin/kill -HUP \$MAINPID
PIDFile=/var/run/slurmctld.pid

[Install]
WantedBy=multi-user.target" | sudo tee /etc/systemd/system/slurmctld.service &> $CLIC_ROOT/clic.log

echo "[Unit]
Description=Slurm node daemon
After=network.target munge.service
ConditionPathExists=/etc/slurm/slurm.conf

[Service]
Type=forking
EnvironmentFile=-/etc/sysconfig/slurmd
ExecStart=/usr/sbin/slurmd \$SLURMD_OPTIONS
ExecReload=/bin/kill -HUP \$MAINPID
PIDFile=/var/run/slurmd.pid
KillMode=process
LimitNOFILE=51200
LimitMEMLOCK=infinity
LimitSTACK=infinity

[Install]
WantedBy=multi-user.target" | sudo tee /etc/systemd/system/slurmd.service &> $CLIC_ROOT/clic.log

sudo mkdir /var/spool/slurmctld /var/log/slurm
sudo chown slurm: /var/spool/slurmctld /var/log/slurm
sudo chmod 755 /var/spool/slurmctld /var/log/slurm

sudo touch /var/log/slurm/slurmctld.log
sudo chown slurm: /var/log/slurm/slurmctld.log

sudo touch /var/log/slurm/slurm_jobacct.log /var/log/slurm/slurm_jobcomp.log
sudo chown slurm: /var/log/slurm/slurm_jobacct.log /var/log/slurm/slurm_jobcomp.log

sudo mkdir /etc/slurm
sudo chown slurm: /etc/slurm

# Add job_submit.lua so that jobs go to the correct partitions
echo -e "\n/etc/slurm/job_submit.lua:" &> $CLIC_ROOT/clic.log
cat $CLIC_ROOT/files/job_submit.lua | sudo tee /etc/slurm/job_submit.lua &> $CLIC_ROOT/clic.log

# Make a good default slurm.conf
echo "Using $namescheme as the base name for the cluster" &> $CLIC_ROOT/clic.log
echo -e "\n/etc/slurm/slurm.conf:" &> $CLIC_ROOT/clic.log
cat $CLIC_ROOT/files/slurm.conf | sed "s/HEADNODE/`hostname -s`/g" | sed "s/NAMESCHEME/$namescheme/g" | sudo tee /etc/slurm/slurm.conf &> $CLIC_ROOT/clic.log

if [ ! -e "/etc/slurm/slurm.key" ]; then
	# Generate keys
	echo "Creating ssl keys for slurm" | tee -a $CLIC_ROOT/clic.log
	sudo openssl genrsa -out /etc/slurm/slurm.key 1024 &> $CLIC_ROOT/clic.log
	sudo openssl rsa -in /etc/slurm/slurm.key -pubout -out /etc/slurm/slurm.cert &> $CLIC_ROOT/clic.log
	sudo chown slurm:slurm /etc/slurm/slurm.key /etc/slurm/slurm.cert
	sudo chmod 400 /etc/slurm/slurm.key
fi

# Set up exports
if ! cat /etc/exports | grep -q "`cat $CLIC_ROOT/files/exports`"; then
	echo -e "\n/etc/exports:" &> $CLIC_ROOT/clic.log
	cat $CLIC_ROOT/files/exports | sudo tee --append /etc/exports &> $CLIC_ROOT/clic.log
fi
