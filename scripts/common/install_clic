#!/bin/bash

echo "Using $namescheme as the base name for the cluster"

#Install clic modules
sudo su - -c "pip3 install $CLIC_ROOT/src --upgrade" >> $CLIC_ROOT/clic.log 2>&1

#Run some of them
source ~/.bashrc
if ! $cloud; then
	sudo clic-synchosts
fi
sudo clic-copyid --generate --append -u `whoami` $user `whoami` >> $CLIC_ROOT/clic.log 2>&1

sudo mkdir /etc/clic/ >> $CLIC_ROOT/clic.log 2>&1
echo "Populating /etc/clic/"

#Create a config file
echo -e "\n/etc/clic/clic.conf:" >> $CLIC_ROOT/clic.log 2>&1
cat $CLIC_ROOT/files/clic.conf | sed "s/NAMESCHEME/$namescheme/g" | sed "s/CLOUD/$cloud/g" | sed "s/USER/$user/g" | sudo tee /etc/clic/clic.conf >> $CLIC_ROOT/clic.log 2>&1

#Create an example init script
echo -e "\n/etc/clic/example.sh:" >> $CLIC_ROOT/clic.log 2>&1
echo "#!/bin/bash
# This script dumps this machine's configuration into a file in /tmp
echo \"cpus: \$1\" > /tmp/example.sh.out
echo \"disksize: \$2\" >> /tmp/example.sh.out
echo \"memory: \$3\" >> /tmp/example.sh.out" | sudo tee /etc/clic/example.sh >> $CLIC_ROOT/clic.log 2>&1
sudo chmod +x /etc/clic/example.sh

#And a readme
echo -e "\n/etc/clic/README:" >> $CLIC_ROOT/clic.log 2>&1
echo "
When clic-initnode is run, either manually or by clic, all executable files in this
directory are copied to the node being initialized and run in shell expansion order
with command line arguments: cpus, disksize, memtype." | sudo tee /etc/clic/README >> $CLIC_ROOT/clic.log 2>&1

#Create a service to start the clic daemon
echo -e "\n/etc/systemd/system/clic.service:" >> $CLIC_ROOT/clic.log 2>&1
path="`which clic`"
cat $CLIC_ROOT/files/clic.service | sed "s&PATH&$path&g" | sudo tee /etc/systemd/system/clic.service >> $CLIC_ROOT/clic.log 2>&1

sudo systemctl enable clic.service >> $CLIC_ROOT/clic.log 2>&1
sudo systemctl restart clic.service
