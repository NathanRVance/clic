#!/usr/bin/python3
import argparse
from requests import get
import os
import re
from pathlib import Path
from pwd import getpwnam

parser = argparse.ArgumentParser(description='Remote mount home directory')
parser.add_argument('userhost', metavar='USER@HOST', nargs=1, help='USER with administrative privilages at HOST to mount /home on')
args = parser.parse_args()

#Error checking
if not re.search('\w+@\w+', args.userhost[0]):
    parser.error('incorrect formatting: ' + args.userhost[0])

ip = get('https://api.ipify.org').text
[user, host] = args.userhost[0].split('@')
hostname = os.popen('hostname -s').read()
sshOpts = '-oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oLogLevel=error'

os.system('clic-copy-id --append --generate')
os.system('sudo ssh -i /home/{0}/.ssh/id_rsa {2} {0}@{1} "sudo clic-sync-hosts {3} {4}"'.format(user, host, sshOpts, hostname, ip))
os.system('sudo ssh -i /home/{0}/.ssh/id_rsa {2} {0}@{1} "sudo rm /root/sshfs_uids /root/sshfs_gids"'.format(user, host, sshOpts))

for path in Path('/home').iterdir():
    if path.is_dir():
        localUser = path.parts[-1]
        uid = getpwnam(localUser).pw_uid
        gid = getpwnam(localUser)[2]
        os.system('sudo ssh -i /home/{0}/.ssh/id_rsa {2} {0}@{1} "echo {0}:{3} | sudo tee -a /root/sshfs_uids &> /dev/null; echo {0}:{4} | sudo tee -a /root/sshfs_gids &> /dev/null"'.format(user, host, sshOpts, uid, gid))

os.system('sudo ssh -i /home/{0}/.ssh/id_rsa {2} {0}@{1} "sudo mkdir /bind-root; sudo mount --bind / /bind-root; sudo sshfs -o ssh_command=\"ssh -i /bind-root/home/{0}/.ssh/id_rsa\" {2} -o nonempty -o allow_other -o idmap=file -o nomap=ignore -o uidfile=/root/sshfs_uids -o gidfile=/root/sshfs_gids {0}@{3}:/home /home && ( for user in ls /bind-root/home; do sudo mount --bind /bind-root/home/\$user/.ssh /home/$user/.ssh; done ) &"'.format(user, host, sshOpts, hostname))
