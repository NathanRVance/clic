#!/usr/bin/python3
import argparse
from pathlib import Path
import os
import re

parser = argparse.ArgumentParser(description='Copy public keys to cloud computers')
parser.add_argument('-g', '--generate', action='store_true', help='generate a public key for users without one')
parser.add_argument('-a', '--append', action='store_true', help='append keys to existing keys (default: replace)')
parser.add_argument('-u', metavar=('LOCAL_USER', 'REMOTE_USER'), nargs=2, help='allow ssh from LOCAL_USER to REMOTE_USER')
parser.add_argument('users', metavar='USER', nargs='*', help='allow ssh from USER on localhost to USER on remotehost (default: if called with no -u, allows all users with home directories in /home)')
args = parser.parse_args()

keys = ''
if args.append:
    keys = os.popen('gcloud compute project-info describe').read()
    match = re.search('key: sshKeys.*?kind:', keys, re.DOTALL)
    if match:
        keys = match.group(0)
        keys = '\n'.join(keys.split('\n')[1:-1])
        keys = re.sub('\|-?\s*', '', keys)
        keys = re.sub('\s*value:\s*', '', keys)
        keys = re.sub('\n\s*', '\n', keys)
        keys = re.sub('\n(?=\S*@\S*)', ' ', keys)
        keys = re.sub('\^DELIM\^', '', keys)
        keys = re.sub(',', 'DELIM', keys)
        keys += '\n'
    else:
        keys = ''

def addKey(local, remote):
    global keys
    key = Path('/home/' + local + '/.ssh/id_rsa.pub')
    if not key.is_file() and args.generate:
        # Generate a key
        print('generating for ' + local)
        os.system('su - ' + local + ' -c "ssh-keygen -t rsa -N \'\' -f ~/.ssh/id_rsa"')
    if key.is_file():
        with open(str(key), 'r') as keyFile:
            newkey = remote + ":" + keyFile.read()
            if not re.search(re.escape(newkey.rstrip()), keys):
                keys += newkey


users = args.users
if len(users) == 0 and not args.u:
    for user in Path('/home').iterdir():
        if user.is_dir():
            users.append(user.parts[-1])
elif args.u:
    addKey(args.u[0], args.u[1])

for user in users:
    addKey(user, user)

keys = keys.rstrip() # Trim trailing newline
print(keys)

os.system('gcloud compute project-info add-metadata --metadata=^DELIM^sshKeys="' + keys + '"')
